/*
 * Copyright 2024 Robert A. James
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

-- H2 2.2.220;
SET DB_CLOSE_DELAY -1;
;
CREATE USER IF NOT EXISTS "SA" SALT '7bf8f9a4564c72dc' HASH '7b790cf7935428964e22d5e57adae62f4e0d138f5740aed7697c7d6bb5bf32ba' ADMIN;
CREATE SEQUENCE "PUBLIC"."HIBERNATE_SEQUENCE" START WITH 1 RESTART WITH 27;
CREATE MEMORY TABLE "PUBLIC"."DICTIONARY"
(
    "ID"   INTEGER NOT NULL,
    "NAME" CHARACTER VARYING(255)
);
ALTER TABLE "PUBLIC"."DICTIONARY"
    ADD CONSTRAINT "PUBLIC"."CONSTRAINT_3" PRIMARY KEY ("ID");
-- 1 +/- SELECT COUNT(*) FROM PUBLIC.DICTIONARY;               
INSERT INTO "PUBLIC"."DICTIONARY"
VALUES (1, 'Core');
CREATE MEMORY TABLE "PUBLIC"."WORD"
(
    "ID"                 BIGINT                 NOT NULL,
    "ARGUMENTCOUNT"      INTEGER,
    "COMPILECLASS"       CHARACTER VARYING,
    "COMPILEONLY"        BOOLEAN,
    "COMPLEX_WORD_ORDER" INTEGER,
    "CREATEDATETIME"     TIMESTAMP,
    "NAME"               CHARACTER VARYING(255) NOT NULL,
    "RUNTIMECLASS"       CHARACTER VARYING,
    "STACKVALUE"         INTEGER,
    "STRINGLITERAL"      CHARACTER VARYING(255),
    "DICTIONARY_ID"      INTEGER                NOT NULL,
    "PARENT_WORD_ID"     BIGINT
);
ALTER TABLE "PUBLIC"."WORD"
    ADD CONSTRAINT "PUBLIC"."CONSTRAINT_2" PRIMARY KEY ("ID");
-- 25 +/- SELECT COUNT(*) FROM PUBLIC.WORD;    
INSERT INTO "PUBLIC"."WORD"
VALUES (2, 0, NULL, FALSE, NULL, TIMESTAMP '2024-01-29 11:23:50.969', 'noop', NULL, NULL, NULL, 1, NULL),
       (3, 0, NULL, FALSE, NULL, TIMESTAMP '2024-01-29 11:23:51.073', 'nop', NULL, NULL, NULL, 1, NULL),
       (4, 2, NULL, FALSE, 0, TIMESTAMP '2024-01-29 11:23:51.132', '+',
        U&'/*\000a * Copyright 2024 Robert A. James\000a *\000a * Licensed under the Apache License, Version 2.0 (the "License");\000a * you may not use this file except in compliance with the License.\000a * You may obtain a copy of the License at\000a *\000a *   http://www.apache.org/licenses/LICENSE-2.0\000a *\000a * Unless required by applicable law or agreed to in writing, software\000a * distributed under the License is distributed on an "AS IS" BASIS,\000a * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\000a * See the License for the specific language governing permissions and\000a * limitations under the License.\000a */\000a\000apackage runtime\000a\000aimport com.rajames.forth.dictionary.Word\000aimport com.rajames.forth.runtime.AbstractRuntime\000aimport com.rajames.forth.runtime.ForthInterpreter\000a\000aclass Plus extends AbstractRuntime {\000a\000a\000a    @Override\000a    Object execute(ForthInterpreter interpreter, Word word) {\000a        interpreter.dataStack.push(interpreter.dataStack.pop() + interpreter.dataStack.pop())\000a        return null\000a    }\000a}\000a',
        NULL, NULL, 1, 25),
       (5, 2, NULL, FALSE, 0, TIMESTAMP '2024-01-29 11:23:51.149', '-',
        U&'/*\000a * Copyright 2024 Robert A. James\000a *\000a * Licensed under the Apache License, Version 2.0 (the "License");\000a * you may not use this file except in compliance with the License.\000a * You may obtain a copy of the License at\000a *\000a *   http://www.apache.org/licenses/LICENSE-2.0\000a *\000a * Unless required by applicable law or agreed to in writing, software\000a * distributed under the License is distributed on an "AS IS" BASIS,\000a * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\000a * See the License for the specific language governing permissions and\000a * limitations under the License.\000a */\000a\000apackage runtime\000a\000aimport com.rajames.forth.dictionary.Word\000aimport com.rajames.forth.runtime.AbstractRuntime\000aimport com.rajames.forth.runtime.ForthInterpreter\000a\000aclass Minus extends AbstractRuntime {\000a\000a\000a    @Override\000a    Object execute(ForthInterpreter interpreter, Word word) {\000a        interpreter.dataStack.push(interpreter.dataStack.pop() - interpreter.dataStack.pop())\000a        return null\000a    }\000a}\000a',
        NULL, NULL, 1, 26),
       (6, 2, NULL, FALSE, 1, TIMESTAMP '2024-01-29 11:23:51.164', '.',
        U&'/*\000a * Copyright 2024 Robert A. James\000a *\000a * Licensed under the Apache License, Version 2.0 (the "License");\000a * you may not use this file except in compliance with the License.\000a * You may obtain a copy of the License at\000a *\000a *   http://www.apache.org/licenses/LICENSE-2.0\000a *\000a * Unless required by applicable law or agreed to in writing, software\000a * distributed under the License is distributed on an "AS IS" BASIS,\000a * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\000a * See the License for the specific language governing permissions and\000a * limitations under the License.\000a */\000a\000apackage runtime\000a\000aimport com.rajames.forth.dictionary.Word\000aimport com.rajames.forth.runtime.AbstractRuntime\000aimport com.rajames.forth.runtime.ForthInterpreter\000a\000aclass Dot extends AbstractRuntime {\000a\000a\000a    @Override\000a    Object execute(ForthInterpreter interpreter, Word word) {\000a        print(interpreter.dataStack.pop())\000a        return null\000a    }\000a}\000a',
        NULL, NULL, 1, 26),
       (7, 0, NULL, FALSE, 2, TIMESTAMP '2024-01-29 11:23:51.185', 'cr',
        U&'/*\000a * Copyright 2024 Robert A. James\000a *\000a * Licensed under the Apache License, Version 2.0 (the "License");\000a * you may not use this file except in compliance with the License.\000a * You may obtain a copy of the License at\000a *\000a *   http://www.apache.org/licenses/LICENSE-2.0\000a *\000a * Unless required by applicable law or agreed to in writing, software\000a * distributed under the License is distributed on an "AS IS" BASIS,\000a * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\000a * See the License for the specific language governing permissions and\000a * limitations under the License.\000a */\000a\000apackage runtime\000a\000aimport com.rajames.forth.dictionary.Word\000aimport com.rajames.forth.runtime.AbstractRuntime\000aimport com.rajames.forth.runtime.ForthInterpreter\000a\000aclass Cr extends AbstractRuntime {\000a    @Override\000a    Object execute(ForthInterpreter interpreter, Word word) {\000a        println()\000a        return null\000a    }\000a}\000a',
        NULL, NULL, 1, 26);
INSERT INTO "PUBLIC"."WORD"
VALUES (8, 1, NULL, FALSE, NULL, TIMESTAMP '2024-01-29 11:23:51.228', 'emit',
        U&'/*\000a * Copyright 2024 Robert A. James\000a *\000a * Licensed under the Apache License, Version 2.0 (the "License");\000a * you may not use this file except in compliance with the License.\000a * You may obtain a copy of the License at\000a *\000a *   http://www.apache.org/licenses/LICENSE-2.0\000a *\000a * Unless required by applicable law or agreed to in writing, software\000a * distributed under the License is distributed on an "AS IS" BASIS,\000a * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\000a * See the License for the specific language governing permissions and\000a * limitations under the License.\000a */\000a\000apackage runtime\000a\000aimport com.rajames.forth.dictionary.Word\000aimport com.rajames.forth.runtime.AbstractRuntime\000aimport com.rajames.forth.runtime.ForthInterpreter\000a\000aclass Emit extends AbstractRuntime {\000a    @Override\000a    Object execute(ForthInterpreter interpreter, Word word) {\000a        print((char) interpreter.dataStack.pop())\000a        return null\000a    }\000a}\000a',
        NULL, NULL, 1, NULL),
       (9, 0,
        U&'/*\000a * Copyright 2024 Robert A. James\000a *\000a * Licensed under the Apache License, Version 2.0 (the "License");\000a * you may not use this file except in compliance with the License.\000a * You may obtain a copy of the License at\000a *\000a *   http://www.apache.org/licenses/LICENSE-2.0\000a *\000a * Unless required by applicable law or agreed to in writing, software\000a * distributed under the License is distributed on an "AS IS" BASIS,\000a * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\000a * See the License for the specific language governing permissions and\000a * limitations under the License.\000a */\000a\000apackage compiler\000a\000aimport com.rajames.forth.compiler.AbstractCompile\000aimport com.rajames.forth.compiler.ForthCompiler\000aimport com.rajames.forth.dictionary.Word\000aimport com.rajames.forth.runtime.ForthInterpreter\000a\000aclass Noop extends AbstractCompile {\000a\000a    @Override\000a    Object execute(ForthCompiler compiler, ForthInterpreter interpreter) {\000a        // compile a NOOP rather than ."\000a        Word noop = compiler.wordService.findByName("noop")\000a        compiler.word = noop\000a        return null\000a    }\000a}\000a',
        FALSE, NULL, TIMESTAMP '2024-01-29 11:23:51.263', '."',
        U&'/*\000a * Copyright 2024 Robert A. James\000a *\000a * Licensed under the Apache License, Version 2.0 (the "License");\000a * you may not use this file except in compliance with the License.\000a * You may obtain a copy of the License at\000a *\000a *   http://www.apache.org/licenses/LICENSE-2.0\000a *\000a * Unless required by applicable law or agreed to in writing, software\000a * distributed under the License is distributed on an "AS IS" BASIS,\000a * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\000a * See the License for the specific language governing permissions and\000a * limitations under the License.\000a */\000a\000apackage runtime\000a\000aimport com.rajames.forth.dictionary.Word\000aimport com.rajames.forth.runtime.AbstractRuntime\000aimport com.rajames.forth.runtime.ForthInterpreter\000a\000aimport java.util.concurrent.ConcurrentLinkedDeque\000a\000aclass DotQuote extends AbstractRuntime {\000a    @Override\000a    Object execute(ForthInterpreter interpreter, Word word) {\000a        ConcurrentLinkedDeque<String> tokens = interpreter.tokens\000a        while (!tokens.isEmpty()) {\000a            String token = tokens.remove()\000a            print(token.replaceAll("\\"", "") + " ")\000a        }\000a        return null\000a    }\000a}\000a',
        NULL, NULL, 1, NULL),
       (10, 1, NULL, FALSE, NULL, TIMESTAMP '2024-01-29 11:23:51.299', '0<',
        U&'/*\000a * Copyright 2024 Robert A. James\000a *\000a * Licensed under the Apache License, Version 2.0 (the "License");\000a * you may not use this file except in compliance with the License.\000a * You may obtain a copy of the License at\000a *\000a *   http://www.apache.org/licenses/LICENSE-2.0\000a *\000a * Unless required by applicable law or agreed to in writing, software\000a * distributed under the License is distributed on an "AS IS" BASIS,\000a * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\000a * See the License for the specific language governing permissions and\000a * limitations under the License.\000a */\000a\000apackage runtime\000a\000aimport com.rajames.forth.dictionary.Word\000aimport com.rajames.forth.runtime.AbstractRuntime\000aimport com.rajames.forth.runtime.ForthInterpreter\000a\000aclass LessThanZero extends AbstractRuntime {\000a    @Override\000a    Object execute(ForthInterpreter interpreter, Word word) {\000a        interpreter.dataStack.push(interpreter.dataStack.pop() < 0 ? -1 : 0)\000a        return null\000a    }\000a}\000a',
        NULL, NULL, 1, NULL);
INSERT INTO "PUBLIC"."WORD"
VALUES (11, 1, NULL, FALSE, NULL, TIMESTAMP '2024-01-29 11:23:51.318', '0=',
        U&'/*\000a * Copyright 2024 Robert A. James\000a *\000a * Licensed under the Apache License, Version 2.0 (the "License");\000a * you may not use this file except in compliance with the License.\000a * You may obtain a copy of the License at\000a *\000a *   http://www.apache.org/licenses/LICENSE-2.0\000a *\000a * Unless required by applicable law or agreed to in writing, software\000a * distributed under the License is distributed on an "AS IS" BASIS,\000a * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\000a * See the License for the specific language governing permissions and\000a * limitations under the License.\000a */\000a\000apackage runtime\000a\000aimport com.rajames.forth.dictionary.Word\000aimport com.rajames.forth.runtime.AbstractRuntime\000aimport com.rajames.forth.runtime.ForthInterpreter\000a\000aclass EqualZero extends AbstractRuntime {\000a    @Override\000a    Object execute(ForthInterpreter interpreter, Word word) {\000a        interpreter.dataStack.push(interpreter.dataStack.pop() == 0 ? -1 : 0)\000a        return null\000a    }\000a}\000a',
        NULL, NULL, 1, NULL),
       (12, 1, NULL, FALSE, NULL, TIMESTAMP '2024-01-29 11:23:51.337', '0=',
        U&'/*\000a * Copyright 2024 Robert A. James\000a *\000a * Licensed under the Apache License, Version 2.0 (the "License");\000a * you may not use this file except in compliance with the License.\000a * You may obtain a copy of the License at\000a *\000a *   http://www.apache.org/licenses/LICENSE-2.0\000a *\000a * Unless required by applicable law or agreed to in writing, software\000a * distributed under the License is distributed on an "AS IS" BASIS,\000a * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\000a * See the License for the specific language governing permissions and\000a * limitations under the License.\000a */\000a\000apackage runtime\000a\000aimport com.rajames.forth.dictionary.Word\000aimport com.rajames.forth.runtime.AbstractRuntime\000aimport com.rajames.forth.runtime.ForthInterpreter\000a\000aclass GreaterThanZero extends AbstractRuntime {\000a    @Override\000a    Object execute(ForthInterpreter interpreter, Word word) {\000a        interpreter.dataStack.push(interpreter.dataStack.pop() > 0 ? -1 : 0)\000a        return null\000a    }\000a}\000a',
        NULL, NULL, 1, NULL),
       (13, 1, NULL, FALSE, NULL, TIMESTAMP '2024-01-29 11:23:51.356', '1+',
        U&'/*\000a * Copyright 2024 Robert A. James\000a *\000a * Licensed under the Apache License, Version 2.0 (the "License");\000a * you may not use this file except in compliance with the License.\000a * You may obtain a copy of the License at\000a *\000a *   http://www.apache.org/licenses/LICENSE-2.0\000a *\000a * Unless required by applicable law or agreed to in writing, software\000a * distributed under the License is distributed on an "AS IS" BASIS,\000a * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\000a * See the License for the specific language governing permissions and\000a * limitations under the License.\000a */\000a\000apackage runtime\000a\000aimport com.rajames.forth.dictionary.Word\000aimport com.rajames.forth.runtime.AbstractRuntime\000aimport com.rajames.forth.runtime.ForthInterpreter\000a\000aclass OnePlus extends AbstractRuntime {\000a\000a    @Override\000a    Object execute(ForthInterpreter interpreter, Word word) {\000a        interpreter.dataStack.push(interpreter.dataStack.pop() + 1)\000a        return null\000a    }\000a}\000a',
        NULL, NULL, 1, NULL),
       (14, 1, NULL, FALSE, NULL, TIMESTAMP '2024-01-29 11:23:51.375', '1-',
        U&'/*\000a * Copyright 2024 Robert A. James\000a *\000a * Licensed under the Apache License, Version 2.0 (the "License");\000a * you may not use this file except in compliance with the License.\000a * You may obtain a copy of the License at\000a *\000a *   http://www.apache.org/licenses/LICENSE-2.0\000a *\000a * Unless required by applicable law or agreed to in writing, software\000a * distributed under the License is distributed on an "AS IS" BASIS,\000a * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\000a * See the License for the specific language governing permissions and\000a * limitations under the License.\000a */\000a\000apackage runtime\000a\000aimport com.rajames.forth.dictionary.Word\000aimport com.rajames.forth.runtime.AbstractRuntime\000aimport com.rajames.forth.runtime.ForthInterpreter\000a\000aclass OneMinus extends AbstractRuntime {\000a\000a    @Override\000a    Object execute(ForthInterpreter interpreter, Word word) {\000a        interpreter.dataStack.push(interpreter.dataStack.pop() - 1)\000a        return null\000a    }\000a}\000a',
        NULL, NULL, 1, NULL);
INSERT INTO "PUBLIC"."WORD"
VALUES (15, 1, NULL, FALSE, NULL, TIMESTAMP '2024-01-29 11:23:51.391', '2+',
        U&'/*\000a * Copyright 2024 Robert A. James\000a *\000a * Licensed under the Apache License, Version 2.0 (the "License");\000a * you may not use this file except in compliance with the License.\000a * You may obtain a copy of the License at\000a *\000a *   http://www.apache.org/licenses/LICENSE-2.0\000a *\000a * Unless required by applicable law or agreed to in writing, software\000a * distributed under the License is distributed on an "AS IS" BASIS,\000a * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\000a * See the License for the specific language governing permissions and\000a * limitations under the License.\000a */\000a\000apackage runtime\000a\000aimport com.rajames.forth.dictionary.Word\000aimport com.rajames.forth.runtime.AbstractRuntime\000aimport com.rajames.forth.runtime.ForthInterpreter\000a\000aclass TwoPlus extends AbstractRuntime {\000a\000a    @Override\000a    Object execute(ForthInterpreter interpreter, Word word) {\000a        interpreter.dataStack.push(interpreter.dataStack.pop() + 2)\000a        return null\000a    }\000a}\000a',
        NULL, NULL, 1, NULL),
       (16, 1, NULL, FALSE, NULL, TIMESTAMP '2024-01-29 11:23:51.418', '2-',
        U&'/*\000a * Copyright 2024 Robert A. James\000a *\000a * Licensed under the Apache License, Version 2.0 (the "License");\000a * you may not use this file except in compliance with the License.\000a * You may obtain a copy of the License at\000a *\000a *   http://www.apache.org/licenses/LICENSE-2.0\000a *\000a * Unless required by applicable law or agreed to in writing, software\000a * distributed under the License is distributed on an "AS IS" BASIS,\000a * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\000a * See the License for the specific language governing permissions and\000a * limitations under the License.\000a */\000a\000apackage runtime\000a\000aimport com.rajames.forth.dictionary.Word\000aimport com.rajames.forth.runtime.AbstractRuntime\000aimport com.rajames.forth.runtime.ForthInterpreter\000a\000aclass TwoMinus extends AbstractRuntime {\000a\000a    @Override\000a    Object execute(ForthInterpreter interpreter, Word word) {\000a        interpreter.dataStack.push(interpreter.dataStack.pop() - 2)\000a        return null\000a    }\000a}\000a',
        NULL, NULL, 1, NULL),
       (17, 1, NULL, FALSE, NULL, TIMESTAMP '2024-01-29 11:23:51.47', '2*',
        U&'/*\000a * Copyright 2024 Robert A. James\000a *\000a * Licensed under the Apache License, Version 2.0 (the "License");\000a * you may not use this file except in compliance with the License.\000a * You may obtain a copy of the License at\000a *\000a *   http://www.apache.org/licenses/LICENSE-2.0\000a *\000a * Unless required by applicable law or agreed to in writing, software\000a * distributed under the License is distributed on an "AS IS" BASIS,\000a * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\000a * See the License for the specific language governing permissions and\000a * limitations under the License.\000a */\000a\000apackage runtime\000a\000aimport com.rajames.forth.dictionary.Word\000aimport com.rajames.forth.runtime.AbstractRuntime\000aimport com.rajames.forth.runtime.ForthInterpreter\000a\000aclass TwoTimes extends AbstractRuntime {\000a\000a    @Override\000a    Object execute(ForthInterpreter interpreter, Word word) {\000a        interpreter.dataStack.push(interpreter.dataStack.pop() * 2)\000a        return null\000a    }\000a}\000a',
        NULL, NULL, 1, NULL),
       (18, 1, NULL, FALSE, NULL, TIMESTAMP '2024-01-29 11:23:51.521', '2/',
        U&'/*\000a * Copyright 2024 Robert A. James\000a *\000a * Licensed under the Apache License, Version 2.0 (the "License");\000a * you may not use this file except in compliance with the License.\000a * You may obtain a copy of the License at\000a *\000a *   http://www.apache.org/licenses/LICENSE-2.0\000a *\000a * Unless required by applicable law or agreed to in writing, software\000a * distributed under the License is distributed on an "AS IS" BASIS,\000a * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\000a * See the License for the specific language governing permissions and\000a * limitations under the License.\000a */\000a\000apackage runtime\000a\000aimport com.rajames.forth.dictionary.Word\000aimport com.rajames.forth.runtime.AbstractRuntime\000aimport com.rajames.forth.runtime.ForthInterpreter\000a\000aclass TwoDivide extends AbstractRuntime {\000a\000a    @Override\000a    Object execute(ForthInterpreter interpreter, Word word) {\000a        interpreter.dataStack.push(interpreter.dataStack.pop() / 2)\000a        return null\000a    }\000a}\000a',
        NULL, NULL, 1, NULL);
INSERT INTO "PUBLIC"."WORD"
VALUES (19, 2, NULL, FALSE, NULL, TIMESTAMP '2024-01-29 11:23:51.545', '<',
        U&'/*\000a * Copyright 2024 Robert A. James\000a *\000a * Licensed under the Apache License, Version 2.0 (the "License");\000a * you may not use this file except in compliance with the License.\000a * You may obtain a copy of the License at\000a *\000a *   http://www.apache.org/licenses/LICENSE-2.0\000a *\000a * Unless required by applicable law or agreed to in writing, software\000a * distributed under the License is distributed on an "AS IS" BASIS,\000a * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\000a * See the License for the specific language governing permissions and\000a * limitations under the License.\000a */\000a\000apackage runtime\000a\000aimport com.rajames.forth.dictionary.Word\000aimport com.rajames.forth.runtime.AbstractRuntime\000aimport com.rajames.forth.runtime.ForthInterpreter\000a\000aclass LessThan extends AbstractRuntime {\000a\000a    @Override\000a    Object execute(ForthInterpreter interpreter, Word word) {\000a        interpreter.dataStack.push((interpreter.dataStack.pop() < interpreter.dataStack.pop()) ? -1 : 0)\000a        return null\000a    }\000a}\000a',
        NULL, NULL, 1, NULL),
       (20, 2, NULL, FALSE, NULL, TIMESTAMP '2024-01-29 11:23:51.565', '>',
        U&'/*\000a * Copyright 2024 Robert A. James\000a *\000a * Licensed under the Apache License, Version 2.0 (the "License");\000a * you may not use this file except in compliance with the License.\000a * You may obtain a copy of the License at\000a *\000a *   http://www.apache.org/licenses/LICENSE-2.0\000a *\000a * Unless required by applicable law or agreed to in writing, software\000a * distributed under the License is distributed on an "AS IS" BASIS,\000a * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\000a * See the License for the specific language governing permissions and\000a * limitations under the License.\000a */\000a\000apackage runtime\000a\000aimport com.rajames.forth.dictionary.Word\000aimport com.rajames.forth.runtime.AbstractRuntime\000aimport com.rajames.forth.runtime.ForthInterpreter\000a\000aclass GreaterThan extends AbstractRuntime {\000a\000a    @Override\000a    Object execute(ForthInterpreter interpreter, Word word) {\000a        interpreter.dataStack.push((interpreter.dataStack.pop() > interpreter.dataStack.pop()) ? -1 : 0)\000a        return null\000a    }\000a}\000a',
        NULL, NULL, 1, NULL),
       (21, 2, NULL, FALSE, NULL, TIMESTAMP '2024-01-29 11:23:51.584', '=',
        U&'/*\000a * Copyright 2024 Robert A. James\000a *\000a * Licensed under the Apache License, Version 2.0 (the "License");\000a * you may not use this file except in compliance with the License.\000a * You may obtain a copy of the License at\000a *\000a *   http://www.apache.org/licenses/LICENSE-2.0\000a *\000a * Unless required by applicable law or agreed to in writing, software\000a * distributed under the License is distributed on an "AS IS" BASIS,\000a * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\000a * See the License for the specific language governing permissions and\000a * limitations under the License.\000a */\000a\000apackage runtime\000a\000aimport com.rajames.forth.dictionary.Word\000aimport com.rajames.forth.runtime.AbstractRuntime\000aimport com.rajames.forth.runtime.ForthInterpreter\000a\000aclass Equal extends AbstractRuntime {\000a\000a    @Override\000a    Object execute(ForthInterpreter interpreter, Word word) {\000a        interpreter.dataStack.push((interpreter.dataStack.pop() == interpreter.dataStack.pop()) ? -1 : 0)\000a        return null\000a    }\000a}\000a',
        NULL, NULL, 1, NULL),
       (22, 0, NULL, FALSE, NULL, TIMESTAMP '2024-01-29 11:23:51.604', ':',
        U&'/*\000a * Copyright 2024 Robert A. James\000a *\000a * Licensed under the Apache License, Version 2.0 (the "License");\000a * you may not use this file except in compliance with the License.\000a * You may obtain a copy of the License at\000a *\000a *   http://www.apache.org/licenses/LICENSE-2.0\000a *\000a * Unless required by applicable law or agreed to in writing, software\000a * distributed under the License is distributed on an "AS IS" BASIS,\000a * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\000a * See the License for the specific language governing permissions and\000a * limitations under the License.\000a */\000a\000apackage runtime\000a\000aimport com.rajames.forth.dictionary.Word\000aimport com.rajames.forth.runtime.AbstractRuntime\000aimport com.rajames.forth.runtime.ForthInterpreter\000a\000aclass Colon extends AbstractRuntime {\000a\000a    @Override\000a    Object execute(ForthInterpreter interpreter, Word word) {\000a        // Code goes here\000a        interpreter.forthCompiler.compileWord(interpreter.tokens as LinkedList)\000a        return null\000a    }\000a}\000a',
        NULL, NULL, 1, NULL);
INSERT INTO "PUBLIC"."WORD"
VALUES (23, 0,
        U&'/*\000a * Copyright 2024 Robert A. James\000a *\000a * Licensed under the Apache License, Version 2.0 (the "License");\000a * you may not use this file except in compliance with the License.\000a * You may obtain a copy of the License at\000a *\000a *   http://www.apache.org/licenses/LICENSE-2.0\000a *\000a * Unless required by applicable law or agreed to in writing, software\000a * distributed under the License is distributed on an "AS IS" BASIS,\000a * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\000a * See the License for the specific language governing permissions and\000a * limitations under the License.\000a */\000a\000apackage compiler\000a\000aimport com.rajames.forth.compiler.AbstractCompile\000aimport com.rajames.forth.compiler.ForthCompiler\000aimport com.rajames.forth.dictionary.Word\000aimport com.rajames.forth.runtime.ForthInterpreter\000a\000aclass Noop extends AbstractCompile {\000a\000a    @Override\000a    Object execute(ForthCompiler compiler, ForthInterpreter interpreter) {\000a        // compile a NOOP rather than ."\000a        Word noop = compiler.wordService.findByName("noop")\000a        compiler.word = noop\000a        return null\000a    }\000a}\000a',
        FALSE, NULL, TIMESTAMP '2024-01-29 11:23:51.629', ';', NULL, NULL, NULL, 1, NULL),
       (24, 0, NULL, TRUE, NULL, TIMESTAMP '2024-01-29 11:23:51.661', 'literal',
        U&'/*\000a * Copyright 2024 Robert A. James\000a *\000a * Licensed under the Apache License, Version 2.0 (the "License");\000a * you may not use this file except in compliance with the License.\000a * You may obtain a copy of the License at\000a *\000a *   http://www.apache.org/licenses/LICENSE-2.0\000a *\000a * Unless required by applicable law or agreed to in writing, software\000a * distributed under the License is distributed on an "AS IS" BASIS,\000a * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\000a * See the License for the specific language governing permissions and\000a * limitations under the License.\000a */\000a\000apackage runtime\000a\000aimport com.rajames.forth.dictionary.Word\000aimport com.rajames.forth.runtime.AbstractRuntime\000aimport com.rajames.forth.runtime.ForthInterpreter\000a\000aclass Literal extends AbstractRuntime {\000a\000a    @Override\000a    Object execute(ForthInterpreter interpreter, Word word) {\000a\000a        // Code goes here\000a        if (word.name.startsWith("int_")) {\000a            Word lit = word\000a            Integer arg = lit.stackValue\000a            interpreter.dataStack.push(arg)\000a        } else if (word.name.startsWith("str_")) {\000a            Word lit = word\000a            String string = lit.stringLiteral\000a            if (string != "\\"") {\000a                print(word.stringLiteral.replaceAll("\\"", "") + " ")\000a            }\000a        }\000a        return null\000a    }\000a}\000a',
        NULL, NULL, 1, NULL),
       (25, 2, NULL, FALSE, NULL, TIMESTAMP '2024-01-29 11:23:51.733', 'add', NULL, NULL, NULL, 1, NULL),
       (26, 2, NULL, FALSE, NULL, TIMESTAMP '2024-01-29 11:23:51.841', 'sub', NULL, NULL, NULL, 1, NULL);
ALTER TABLE "PUBLIC"."DICTIONARY"
    ADD CONSTRAINT "PUBLIC"."UK_BFLAUXN62LF5A1PEXOI1Q9UTX" UNIQUE ("NAME");
ALTER TABLE "PUBLIC"."WORD"
    ADD CONSTRAINT "PUBLIC"."FKHSJURN0JGW4QA8M51VDMQJK5C" FOREIGN KEY ("PARENT_WORD_ID") REFERENCES "PUBLIC"."WORD" ("ID") NOCHECK;
ALTER TABLE "PUBLIC"."WORD"
    ADD CONSTRAINT "PUBLIC"."FKPEVQ98N5Q80GKUHDF3YIK5SBA" FOREIGN KEY ("DICTIONARY_ID") REFERENCES "PUBLIC"."DICTIONARY" ("ID") NOCHECK;
